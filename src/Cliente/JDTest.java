/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cliente;

import Negocio.Registro;
import Negocio.Test;
import java.awt.Checkbox;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import org.jpl7.Term;
import prolog.Prolog;


/**
 *
 * @author USUARIO
 */
public class JDTest extends javax.swing.JDialog {
    JDPreguntas obj = new JDPreguntas(null, true);
    /**
     * Creates new form JDTest
     */
    public JDTest(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtemail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        chkMatematica = new javax.swing.JCheckBox();
        chkEspacial = new javax.swing.JCheckBox();
        chkHabla = new javax.swing.JCheckBox();
        chkSoftware = new javax.swing.JCheckBox();
        chkVocabulario = new javax.swing.JCheckBox();
        chkRazonamiento = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        chkAtencion = new javax.swing.JCheckBox();
        chkHabilidadNum = new javax.swing.JCheckBox();
        chkTrabajo = new javax.swing.JCheckBox();
        chkIdiomas = new javax.swing.JCheckBox();
        chk1Potencial = new javax.swing.JCheckBox();
        chkComprension = new javax.swing.JCheckBox();
        chkFilosofia = new javax.swing.JCheckBox();

        jButton1.setText("ENVIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".: TEST VOCACIONAL");

        jLabel2.setText("E-mail:");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Sitka Small", 1, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Seleccione todos los adjetivos que \ndescriban su personalidad. Señale \ntantos como desee, trate de definirse \ntal como es, no como le gustaría ser.");
        jScrollPane1.setViewportView(jTextArea1);

        chkMatematica.setText("Matemático");
        chkMatematica.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkMatematicaStateChanged(evt);
            }
        });
        chkMatematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMatematicaActionPerformed(evt);
            }
        });

        chkEspacial.setText("Dominio espacial");
        chkEspacial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEspacialActionPerformed(evt);
            }
        });

        chkHabla.setText("Dominio del habla");
        chkHabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHablaActionPerformed(evt);
            }
        });

        chkSoftware.setText("Manejo de software");
        chkSoftware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSoftwareActionPerformed(evt);
            }
        });

        chkVocabulario.setText("Buen vocabulario");
        chkVocabulario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVocabularioActionPerformed(evt);
            }
        });

        chkRazonamiento.setText("Razonamiento Matematico");
        chkRazonamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRazonamientoActionPerformed(evt);
            }
        });

        jButton3.setText("ENVIAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        chkAtencion.setText("Atención");
        chkAtencion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAtencionActionPerformed(evt);
            }
        });

        chkHabilidadNum.setText("Habilidad Numérica");
        chkHabilidadNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHabilidadNumActionPerformed(evt);
            }
        });

        chkTrabajo.setText("Trabajo en equipo");
        chkTrabajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTrabajoActionPerformed(evt);
            }
        });

        chkIdiomas.setText("Idiomas");
        chkIdiomas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIdiomasActionPerformed(evt);
            }
        });

        chk1Potencial.setText("Potencial Empresarial");
        chk1Potencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk1PotencialActionPerformed(evt);
            }
        });

        chkComprension.setText("Comprensión");
        chkComprension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkComprensionActionPerformed(evt);
            }
        });

        chkFilosofia.setText("Filosofía");
        chkFilosofia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFilosofiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtemail, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkFilosofia)
                    .addComponent(chkComprension)
                    .addComponent(chk1Potencial)
                    .addComponent(chkIdiomas)
                    .addComponent(chkTrabajo)
                    .addComponent(chkHabilidadNum)
                    .addComponent(chkAtencion)
                    .addComponent(chkRazonamiento)
                    .addComponent(chkHabla)
                    .addComponent(chkEspacial)
                    .addComponent(chkMatematica)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(chkVocabulario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkSoftware, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(chkAtencion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkHabilidadNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRazonamiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkVocabulario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkHabla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkEspacial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkTrabajo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIdiomas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSoftware)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk1Potencial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkComprension)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMatematica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFilosofia)
                .addGap(15, 15, 15)
                .addComponent(jButton3)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkMatematicaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkMatematicaStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMatematicaStateChanged

    private void chkMatematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMatematicaActionPerformed
        // TODO add your handling code here:
        if(chkMatematica.isSelected()==true){
            llamarForm(12);
        }

    }//GEN-LAST:event_chkMatematicaActionPerformed

    private void chkHablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHablaActionPerformed
        // TODO add your handling code here:
        if(chkHabla.isSelected()==true){
            llamarForm(5);
        }
    }//GEN-LAST:event_chkHablaActionPerformed

    private void chkSoftwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSoftwareActionPerformed
        // TODO add your handling code here:
        if(chkSoftware.isSelected()==true){
            llamarForm(9);
        }
    }//GEN-LAST:event_chkSoftwareActionPerformed

    private void chkVocabularioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVocabularioActionPerformed
        // TODO add your handling code here:
        if(chkVocabulario.isSelected()==true){
            llamarForm(4);
        }
    }//GEN-LAST:event_chkVocabularioActionPerformed

    private void chkRazonamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRazonamientoActionPerformed
        // TODO add your handling code here:
        if(chkRazonamiento.isSelected()==true){
            llamarForm(3);
        }
    }//GEN-LAST:event_chkRazonamientoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int posAlumno = Registro.buscarAlumno(txtemail.getText());

        if (posAlumno !=-1) {
            Prolog.limpiezaprolog();
            if(chkAtencion.isSelected()){
                Prolog.insertaopc("atencion", "si");
            }else{
                Prolog.insertaopc("atencion", "no");
            }
            if(chkHabilidadNum.isSelected()){
                Prolog.insertaopc("hab_numerica", "si");
            }else{
                Prolog.insertaopc("hab_numerica", "no");
            }
            if(chkRazonamiento.isSelected()){
                Prolog.insertaopc("razonamiento", "si");
            }else{
                Prolog.insertaopc("razonamiento", "no");
            }
            if(chkVocabulario.isSelected()){
                Prolog.insertaopc("vocabulario", "si");
            }else{
                Prolog.insertaopc("vocabulario", "no");
            }
            if(chkHabla.isSelected()){
                Prolog.insertaopc("domhabla", "si");
            }else{
                Prolog.insertaopc("domhabla", "no");
            }
            if(chkEspacial.isSelected()){
                Prolog.insertaopc("espacial", "si");
            }else{
                Prolog.insertaopc("espacial", "no");
            }
            if(chkTrabajo.isSelected()){
                Prolog.insertaopc("trabajo_equipo", "si");
            }else{
                Prolog.insertaopc("trabajo_equipo", "no");
            }
            if(chkIdiomas.isSelected()){
                Prolog.insertaopc("idiomas", "si");
            }else{
                Prolog.insertaopc("idiomas", "no");
            }
            if(chkSoftware.isSelected()){
                Prolog.insertaopc("informatica", "si");
            }else{
                Prolog.insertaopc("informatica", "no");
            }
            if(chk1Potencial.isSelected()){
                Prolog.insertaopc("potempresarial", "si");
            }else{
                Prolog.insertaopc("potempresarial", "no");
            }
            if(chkComprension.isSelected()){
                Prolog.insertaopc("comprension", "si");
            }else{
                Prolog.insertaopc("comprension", "no");
            }
            if(chkMatematica.isSelected()){
                Prolog.insertaopc("matematica", "si");
            }else{
                Prolog.insertaopc("matematica", "no");
            }
            if(chkFilosofia.isSelected()){
                Prolog.insertaopc("filosofia", "si");
            }else{
                Prolog.insertaopc("filosofia", "no");
            }
            Prolog.reglas(txtemail.getText());
            JOptionPane.showMessageDialog(null, "TEST REGISTRADO", "MENSAJE DEL SISTEMA", JOptionPane.INFORMATION_MESSAGE);

            FrmResultados interfaz = new FrmResultados();
            FrmPrincipal.contenedor.add(interfaz);
            this.setVisible(false);
            interfaz.toFront();
            interfaz.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "ALUMNO NO REGISTRADO", "MENSAJE DEL SISTEMA", JOptionPane.ERROR_MESSAGE);
        }

        txtemail.setText("");
        chkAtencion.setSelected(false);
        chkHabilidadNum.setSelected(false);
        chkRazonamiento.setSelected(false);
        chkVocabulario.setSelected(false);
        chkHabla.setSelected(false);
        chkEspacial.setSelected(false);
        chkTrabajo.setSelected(false);
        chkIdiomas.setSelected(false);
        chkSoftware.setSelected(false);
        chk1Potencial.setSelected(false);
        chkComprension.setSelected(false);
        chkMatematica.setSelected(false);
        chkFilosofia.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void chkAtencionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAtencionActionPerformed
        // TODO add your handling code here:
        if(chkAtencion.isSelected()==true){
            llamarForm(1);
        }
    }//GEN-LAST:event_chkAtencionActionPerformed

    private void chkHabilidadNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHabilidadNumActionPerformed
        // TODO add your handling code here:
        if(chkHabilidadNum.isSelected()==true){
            llamarForm(2);
        }
    }//GEN-LAST:event_chkHabilidadNumActionPerformed

    private void chkEspacialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEspacialActionPerformed
        // TODO add your handling code here:
        if(chkEspacial.isSelected()==true){
            llamarForm(6);
        }
    }//GEN-LAST:event_chkEspacialActionPerformed

    private void chkTrabajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTrabajoActionPerformed
        // TODO add your handling code here:
        if(chkTrabajo.isSelected()==true){
            llamarForm(7);
        }
    }//GEN-LAST:event_chkTrabajoActionPerformed

    private void chkIdiomasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIdiomasActionPerformed
        // TODO add your handling code here:
        if(chkIdiomas.isSelected()==true){
            llamarForm(8);
        }
    }//GEN-LAST:event_chkIdiomasActionPerformed

    private void chk1PotencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk1PotencialActionPerformed
        // TODO add your handling code here:
        if(chk1Potencial.isSelected()==true){
            llamarForm(10);
        }
    }//GEN-LAST:event_chk1PotencialActionPerformed

    private void chkComprensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkComprensionActionPerformed
        // TODO add your handling code here:
        if(chkComprension.isSelected()==true){
            llamarForm(11);
        }
    }//GEN-LAST:event_chkComprensionActionPerformed

    private void chkFilosofiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFilosofiaActionPerformed
        // TODO add your handling code here:
        if(chkFilosofia.isSelected()==true){
            llamarForm(13);
        }
    }//GEN-LAST:event_chkFilosofiaActionPerformed

    private void llamarForm(int valor){
        obj.tipo(valor);
        obj.setVisible(true);
//        if(obj.getBloquear()){
//            bloquearChk(obj.getRpta());
//        }else{
//            desbloquearChk(obj.getRpta());
//        }
    }
    
    public static void bloquearChk(int chk){ 
        switch(chk){
            case 1:
                chkAtencion.setSelected(false);
                chkAtencion.setEnabled(false);
                break;
            case 2:
                chkHabilidadNum.setSelected(false);
                chkHabilidadNum.setEnabled(false);
                break;
            case 3:
                chkRazonamiento.setSelected(false);
                chkRazonamiento.setEnabled(false);
                break;
            case 4:
                chkVocabulario.setSelected(false);
                chkVocabulario.setEnabled(false);
                break;
            case 5:
                chkHabla.setSelected(false);
                chkHabla.setEnabled(false);
                break;
            case 6:
                chkEspacial.setSelected(false);
                chkEspacial.setEnabled(false);
                break;
            case 7:
                chkTrabajo.setSelected(false);
                chkTrabajo.setEnabled(false);
                break;
            case 8:
                chkIdiomas.setSelected(false);
                chkIdiomas.setEnabled(false);
                break;
            case 9:
                chkSoftware.setSelected(false);
                chkSoftware.setEnabled(false);
                break;
            case 10:
                chk1Potencial.setSelected(false);
                chk1Potencial.setEnabled(false);
                break;
            case 11:
                chkComprension.setSelected(false);
                chkComprension.setEnabled(false);
                break;
            case 12:
                chkMatematica.setSelected(false);
                chkMatematica.setEnabled(false);
                break;
            case 13:
                chkFilosofia.setSelected(false);
                chkFilosofia.setEnabled(false);
                break;
        }

    }
    
    public static void desbloquearChk(int chk){
        switch(chk){
            case 1:
                chkAtencion.setSelected(true);
                chkAtencion.setEnabled(false);
                break;
            case 2:
                chkHabilidadNum.setSelected(true);
                chkHabilidadNum.setEnabled(false);
                break;
            case 3:
                chkRazonamiento.setSelected(true);
                chkRazonamiento.setEnabled(false);
                break;
            case 4:
                chkVocabulario.setSelected(true);
                chkVocabulario.setEnabled(false);
                break;
            case 5:
                chkHabla.setSelected(true);
                chkHabla.setEnabled(false);
                break;
            case 6:
                chkEspacial.setSelected(true);
                chkEspacial.setEnabled(false);
                break;
            case 7:
                chkTrabajo.setSelected(true);
                chkTrabajo.setEnabled(false);
                break;
            case 8:
                chkIdiomas.setSelected(true);
                chkIdiomas.setEnabled(false);
                break;
            case 9:
                chkSoftware.setSelected(true);
                chkSoftware.setEnabled(false);
                break;
            case 10:
                chk1Potencial.setSelected(true);
                chk1Potencial.setEnabled(false);
                break;
            case 11:
                chkComprension.setSelected(true);
                chkComprension.setEnabled(false);
                break;
            case 12:
                chkMatematica.setSelected(true);
                chkMatematica.setEnabled(false);
                break;
            case 13:
                chkFilosofia.setSelected(true);
                chkFilosofia.setEnabled(false);
                break;         
        }
    }
  
    
    /**
     * @param args the command line arguments
     */
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JCheckBox chk1Potencial;
    private static javax.swing.JCheckBox chkAtencion;
    private static javax.swing.JCheckBox chkComprension;
    public static javax.swing.JCheckBox chkEspacial;
    private static javax.swing.JCheckBox chkFilosofia;
    private static javax.swing.JCheckBox chkHabilidadNum;
    public static javax.swing.JCheckBox chkHabla;
    private static javax.swing.JCheckBox chkIdiomas;
    public static javax.swing.JCheckBox chkMatematica;
    public static javax.swing.JCheckBox chkRazonamiento;
    public static javax.swing.JCheckBox chkSoftware;
    private static javax.swing.JCheckBox chkTrabajo;
    public static javax.swing.JCheckBox chkVocabulario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtemail;
    // End of variables declaration//GEN-END:variables
}
